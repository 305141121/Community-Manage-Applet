-- MySQL Script generated by MySQL Workbench
-- Thu Apr  5 17:11:01 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema communitydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema communitydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `communitydb` DEFAULT CHARACTER SET utf8 ;
USE `communitydb` ;

-- -----------------------------------------------------
-- Table `communitydb`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `communitydb`.`user` (
  `openid` VARCHAR(32) NOT NULL,
  `name` VARCHAR(32) NULL,
  `phone` INT NULL,
  `sex` TINYINT NULL COMMENT '0为男生，1为女生\n',
  `grade` SMALLINT NULL,
  `major` VARCHAR(32) NULL,
  PRIMARY KEY (`openid`));


-- -----------------------------------------------------
-- Table `communitydb`.`message`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `communitydb`.`message` (
  `message_id` VARCHAR(45) NOT NULL,
  `content` VARCHAR(256) NOT NULL,
  `readed` TINYINT NOT NULL DEFAULT 0 COMMENT '0为未读，1为已读',
  `sendtime` DATE NOT NULL,
  `user_openid` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`message_id`),
  INDEX `fk_message_user1_idx` (`user_openid` ASC),
  CONSTRAINT `fk_message_user1`
    FOREIGN KEY (`user_openid`)
    REFERENCES `communitydb`.`user` (`openid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `communitydb`.`community`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `communitydb`.`community` (
  `com_id` VARCHAR(45) NOT NULL,
  `name` VARCHAR(32) NOT NULL,
  `intro` VARCHAR(256) NOT NULL,
  `logo` BLOB NOT NULL,
  PRIMARY KEY (`com_id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  UNIQUE INDEX `com_id_UNIQUE` (`com_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `communitydb`.`community_has_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `communitydb`.`community_has_user` (
  `community_com_id` VARCHAR(45) NOT NULL,
  `user_wechat_id` VARCHAR(16) NOT NULL,
  PRIMARY KEY (`community_com_id`, `user_wechat_id`),
  INDEX `fk_community_has_user_user1_idx` (`user_wechat_id` ASC),
  INDEX `fk_community_has_user_community1_idx` (`community_com_id` ASC),
  CONSTRAINT `fk_community_has_user_community1`
    FOREIGN KEY (`community_com_id`)
    REFERENCES `communitydb`.`community` (`com_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_community_has_user_user1`
    FOREIGN KEY (`user_wechat_id`)
    REFERENCES `communitydb`.`user` (`openid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `communitydb`.`activity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `communitydb`.`activity` (
  `activity_url` VARCHAR(256) NOT NULL,
  `msg_title` VARCHAR(32) NULL COMMENT '微信推送标题',
  `msg_cdn_url` VARCHAR(256) NULL COMMENT '微信推送图 链接',
  `community_com_id` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`activity_url`),
  INDEX `fk_Activity_community1_idx` (`community_com_id` ASC),
  CONSTRAINT `fk_Activity_community1`
    FOREIGN KEY (`community_com_id`)
    REFERENCES `communitydb`.`community` (`com_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
